* Current State

I have used Gurobi's Python API to construct a simple PCSTP solver which using

- Lazy constraints for GSECs
- Branch and Cut using max flow to identify violated GSECs
- A fast version of the GW Algorithm for heuristics.

* Proposal: Small experiments

Validate some of the small factoids which are presented in the various articles.

I could perform some selection of the following computational experiments.

** Directed reformulations of the PCSTP give better performance than undirected
Both of the well known exact solvers for the PCSTP transform the input problem to an equivalent directed
version of it. Perform a test comparing the runtimes for solving PCSTP with and without transformations.

** Which combination of preprocessing routines gives the best outcome
Preprocessing routines are commonly used in research papers. However the ordering and selection of graph
reductions have yet to be stringently compared.

Some subset of the Cartesian product of graph reductions could be compared.

** Use what we have learnt from the PCSTP to solve the PCTSP

The PCTSP is not well-explored, I could see if the methods used in the PCSTP can be transferred to the PCTSP.

